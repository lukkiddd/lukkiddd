---
layout: post
title:  "เขียน Atomic Workflow"
date:   2016-08-13 01:19:00 +0700
categories: css
---

การเขียน CSS มันเหมือนจะง่ายแต่ก็ไม่ง่าย ถ้าเราจะเขียน CSS แบบทีเดียวจบ เป็นหน้า ๆ ไป มันก็ไม่ได้ลำบากอะไรมาก แต่ปัญหาคือ มันทำงานร่วมกันยาก เลยมีเทคนิคต่าง ๆ เกิดขึ้นมากมาย เพื่อใช้เป็นหลักในการทำงาน และบทความนี้ก็จะนำเสนออีกหนึ่งเทคนิคที่น่าสนใจที่เรียกว่า Atomic design เป็นยังไงไปดูกันดีกว่าครับ

# ทำไมต้องใช้ atomic design
- ใช้ซ้ำง่าย เพราะทุกอย่างเป็นส่วนเล็ก ๆ ที่ประกอบกัน
- สร้าง styleguide ง่ายขึ้น
- CSS มีความชัดเจน
- ประสิทธิภาพสูงขึ้น

ถ้าอย่างนี้แล้วจะรอช้าอยู่ใย เรามาเริ่มเขียน css แบบ Atomic กันดีกว่าครับ โดยที่การเขียน Atomic Workflow จะแบ่งส่วนประกอบออกเป็นส่วนย่อยที่สุด ที่เรียกว่า atom แล้วเมื่อ atom มากกว่าหนึ่งตัวมาประกอบกันเราจะเรียกว่า molecule หลังจากนั้นเมื่อมี molecule มาประกอบกันจะกลายเป็น organism และเมื่อเรานำ orgamism มาประกอบกันจะกลายเป็น template เมื่อมี template แล้ว ใส่สีแต่งเติมเพิ่มนู่นนี่ จนกลายเป็น page ครับ สรุปแล้วมันจะเป็นดังนี้

Atom -> Molecule -> Organism -> Template -> Page

## Folders
โฟลเดอร์ของเราจะถูกแบ่งย่อยกันไปแบบนี้ครับ
- `00-atom/*.scss`
- `01-molecule/*.scss`
- `02-organism/*.scss`
- `03-template/*.scss`
- `04-page/*.scss`
- `05-utility/*.scss`
- `main.scss`

## Atom (อะตอมน้อย)
ส่วนที่เล็กที่สุด คือ atom (อยู่ที่การมองนะครับว่าอะไรเล็กสุดสำหรับคุณ) นั่นหมายถึง CSS สำหรับส่วนประกอยแยกย่อยยิบๆ ทั้งหลาย ไม่ว่าจะเป็นเรื่องของ สี, แบบอักษร หรือ ปุ่ม ยกตัวอย่างเช่น ผมเขียน SCSS ก็จะมีไฟล์ประมาณนี้ครับ
- `00-atom/_colos.scss` - ใช้สำหรับกำหนด Color scheme หรือตัวแปรสีต่าง ๆ
- `00-atom/_typography.scss` - ใช้สำหรับกำหนดสีตัวอักษร, ขนาด, หรือตกแต่งต่าง ๆ
- `00-atom/_button.scss` - ใช้สำหรับกำหนด รูปแบบปุ่ม ขอบโค้งมน สี หรือ ปุ่มใน state ต่าง ๆ ครับ
- `00-atom/_input.scss` - ใช้สำหรับกำหนดรูปแบบ form input ทั้งหลาย
- และอื่น ๆ อีกมากมาย

## Molecule (โมเลกุล)
ส่วนต่อมาคือการนำ Atom มาประกอบกันครับ ซึ่งก็แตกต่างกันไปตามความต้องการครับ (เช่นเดิมครับ ใครมองว่ามันใหญ่ระดับโมเลกุลก็เอามาวางไว้ในส่วนนี้ครับ) ยกตัวอย่างเช่น `search box` ครับ ผมอาจจะมองว่ามันเป็น Molecule เพราะมันจะประกอบด้วย `text`, `input`, `button` ดังนั้นผมก็จะมีไฟล์ `01-molecule/_searchBox.scss` ขึ้นมาครับ
- `01-molecule/_searchBox.scss` - สำหรับกล่องค้นหา
- `01-molecule/_navigationLink.scss` - สำหรับ link ส่วน navigation

## Organism (อวัยวะ)
ส่วนต่อมา ก็ใหญ่ขึ้นมาอีกครับ ซึ่งมันคือการนำ `atom` และ `molecule` มาประกอบรวมกัน ยกตัวอย่างเช่น
- `02-organism/_navigationBar.scss` - นั่นคือ css สำหรับ `navigation bar` ซึ่งอาจจะประกอบไปด้วย `00-atom/_logo.scss`, `01-molecule/_searchBox.scss`, `01-molecule/navigationLink.scss` เป็นต้นครับ

## Template (เทมเพลตรูปแบบเว็บ)
ในส่วนนี้ โดยส่วนตัวผมไม่ได้เขียน `css` นะครับจะเป็นการประกอบกันของ component ต่าง ๆ ซะมากกว่า ซึ่งอาจจะนำส่วนด้านบนที่เขียน `css` ไว้ไปสร้างเป็น component, หรือ directive(angularjs) แล้วสร้างเป็น `template` ของเว็บไซต์ขึ้นมาเพื่อเตรียมใช้งานในการขึ้น prototype ก็ได้ครับ จะได้รวดเร็วมากขึ้น หรือ ถ้าหากมีการเขียน css ก็สามารถสร้างเป็นไฟล์เฉพาะขึ้นมาได้ สำหรับ `template` โดยเฉพาะครับ เช่น `template` สำหรับ `blog` ก็อาจจะมีไฟล์เฉพาะส่วนที่ใช้จัด `layout` แยกมาครับ
- `03-template/_blog.scss` - จัด `layout` สำหรับ `blog template`

## Page (รูปหน้าที่สวยงามและสมบูรณ์)
ส่วนสุดท้ายคือการเติมเต็ม content ให้กับ `template` เราครับ จาก กล่องสีเทา ๆ ให้มีสีสันสำหรับเว็บของคุณ มีภาพ มีข้อความที่เป็นข้อความจริง ๆ เพื่อใช้แสดงผล สำหรับส่วนนี้ `css` อาจจะเป็นการตกแต่งเพิ่มเติม จาก `template` ที่ดึงมาใช้ครับ ยกตัวอย่างเช่นมี `page` ที่ใช้ `template blog` แต่อยากจะให้ข้อความบางส่วนใหญ่กว่าตัว `template` หลัก ก็สามารถปรับแก้ได้ในส่วนนี้ครับ แต่โดยส่วนตัวแล้ว `page` และ `template` จะใช้ `css` แบบเดียวกันครับ
- `04-page/_blog.scss` - ปรับปรุงแก้ไขเพิ่มเติมสำหรับ `page` นั้น ๆ

## Utility (ส่วนเพิ่มที่ผมเพิ่มเอง)
สำหรับส่วนนี้ผมเพิ่มขึ้นมาเนื่องจากว่า บางทีผมจำเป็นต้องแก้ไขเว็บไซต์แบบรวดเร็วโดยไม่ทันคิด ไม่ทันจัด ก็เลยมีส่วนนี้ขึ้นมาครับ โดยในส่วนนี้จะมีไฟล์สำหรับช่วยเหลือต่าง ๆ เช่น
- `05-utility/_shame.scss` - ไฟล์สำหรับ `Shame css (!important)`
- `05-utility/_animation.scss` - ไฟล์สำหรับ `css animation`
- `05-utility/_reset.scss` - ไฟล์สำหรับ `reset` ค่ามาตรฐานของ html ครับ

และนี่ก็เป็นหนึ่งในรูปแบบการเขียน css แบบนึงนะครับ ยังมีอีกหลายแบบให้เลือกใช้และปรับให้เข้ากับงานของคุณครับ

ใครสนใจหรือชอบ อยากจะแบ่งปันเพิ่มเติม เข้ามาคุยกันได้ที่ [Lukkiddd](http://www.facebook.com/lukkiddd) ขอบคุณครับ

## References
- [Alex Devero Blog](http://blog.alexdevero.com/atomic-design-scalable-modular-css-sass/)
